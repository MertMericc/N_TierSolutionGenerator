using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using {{ProjectName}}.Core.DataAccess.EntityFramework;
using {{ProjectName}}.Core.Entities.Concrete;
using {{ProjectName}}.DataAccess.Abstract;
using {{ProjectName}}.DataAccess.Concrete.EntityFramework.Contexts;
using System.Collections.Generic;
using System.Linq;

public class EfUserDal : EfEntityRepositoryBase<User, NorthwindContext>, IUserDal
{
    private readonly IConfiguration _configuration;

    public EfUserDal(IConfiguration configuration)
    {
        _configuration = configuration;
    }

    public List<OperationClaim> GetClaims(User user)
    {
        var optionsBuilder = new DbContextOptionsBuilder<NorthwindContext>();
        optionsBuilder.UseSqlServer(_configuration.GetConnectionString("DefaultConnection"));

        using (var context = new NorthwindContext(optionsBuilder.Options, _configuration))
        {
            // LINQ sorgusu
            var result = (from operationClaim in context.OperationClaims
                          join userOperationClaim in context.UserOperationClaims
                          on operationClaim.Id equals userOperationClaim.OperationClaimId
                          where userOperationClaim.UserId == user.Id
                          select new OperationClaim { Id = operationClaim.Id, Name = operationClaim.Name })
                         .ToList();

            return result;
        }
    }
}
